"""модуль, в котором реализованны функции сортировки последовательностей."""

# Список атрибутов, которые могут быть подключены.
__all__ = ['triangle_sequence', 'without_00', 'reverse_it']


def triangle_sequence(n):
    """Функция выводит заданное количество членов треугольной последовательности.
    num - текущее число для вывода. Вывод num начинается с единицы,т.к. сама последовательность начинается с единицы.
    k - количество уже выведенных чисел num.
    В цикле будем выводить num и увеличивать k на 1.
    Каждый раз когда количество выводы определённого числа будет равно этому числу, счётчик вывода обнуляется и мы
    переходим к следующему числу."""
    num = 1
    k = 0
    for i in range(n):
        print(num, end=' ')
        k = k + 1
        if k == num:
            k = 0
            num = num + 1
    return str('')


def without_00(a, b):
    """  Функция опеределяет, сколько существует последовательностей из a нулей и b единиц, в которых
  никакие два нуля не стоят рядом. При этом задаются два параметра функции:
  a - количество нулей;
  b - количество единиц."""
    if a > b + 1:
        return 0
    if a == 0 or b == 0:
        return 1
    return without_00(a, b - 1) + without_00(a - 1, b - 1)


def reverse_it(n, i=0):
    """ Функция разворачивает число. При этом задаются два параметра функции:
 n - число, которое вводит пользователь;
 i - второе число, в которое мы записываем первое число в обратном порядке.
 Для этого мы каждую итерацию рекурсии отделяем от n остаток применяя n%10  и добывляем его в i, тем самым увеличивая i
 с каждой итерацией. Параллельно с этим мы уменьшаем значение n применяя n//10.
 В конечном итоге это приводит к тому, что n = 0, а i приобретает вид развёрнутого числа n."""
    if n == 0:
        return i
    else:
        return reverse_it(n // 10, i * 10 + n % 10)
