"""Модуль содержит функции: возведения чисел из списка в квадрат, нахождения простых чисел в заданном диапазоне и
проверки на нахождение в списке двух чисел, сумма которых равна заданному числу."""

__all__ = ['two_sum', 'list_numbers_squared', 'prime_number']


def two_sum(nums, target):  # Создаём функцию с двумя параметрами.
    """Функция, которая принимает на вход параметры : список чисел любой
   дины и число . Функция проверяет есть ли в списке 2 числа, сума которых
   еквивалентна числу переданому 2м параметром. Функция возвращает
   булевое значение - результат поиска фукции."""
    for x in range(0, len(nums)):  # Задаём диапазон индекса для первого числа в сумме.
        i = nums[x]  # Принимаем за первое число в сумме.
        j = target - i  # Принимаем за второе число через разность суммы и первого числа.
        for y in range(x + 1, len(nums)):  # Задаём диапазон для второго числа в сумме.
            if j == nums[y]:  # Если предполагаемое второе число находится в списке.
                return True  # Выводим True.
            else:
                continue  # В противном случае начинаем следующий проход цикла.
    #  Если после всех проходов цикла второго числа в нём так и не оказалось, то выводим False.
    return False


def list_numbers_squared(my_list):
    """Принимает список с числами и возводит каждое число списка в квадрат."""
    return list(map(lambda x, y=2: x ** y, my_list))


def prime_number(a, b):  # Создаём функцию с двумя аргументами.
    """
       Функция нахождения простых чисел в дипазоне заданным 2мя аргументами чисел.
    """
    if a < 2:  # Отсекаем единицу, т.к. она не является простым числом.
        a = 2
    for i in range(a, b + 1):  # Пробегаем все числа от a до b включительно.
        for j in range(2, i):  # Ищем делители среди списка чисел не превышающих делимое.
            if i % j == 0:  # Если делитель найден, число не простое.
                break  # Позволяет завершить выполнение внутреннего цикла и перейти к следующей итерации внешнего.
        else:
            print(i, end=' ')  # Если делителей нет выводим число пользователю.
    return str('')
